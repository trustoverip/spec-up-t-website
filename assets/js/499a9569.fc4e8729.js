"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4073],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>l});var s=r(96540);const t={},i=s.createContext(t);function c(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:n},e.children)}},64674:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"developer-documentation/scripts/scripts-general/external-references","title":"External References","description":"This documentation was generated by Copilot\'s \u201cClaude Sonnet 4 (Preview)\u201d and has not yet been verified by a human.","source":"@site/docs/developer-documentation/scripts/scripts-general/external-references.md","sourceDirName":"developer-documentation/scripts/scripts-general","slug":"/developer-documentation/scripts/scripts-general/external-references","permalink":"/spec-up-t-website/docs/developer-documentation/scripts/scripts-general/external-references","draft":false,"unlisted":false,"editUrl":"https://github.com/blockchainbird/spec-up-t-website/tree/main/docs/developer-documentation/scripts/scripts-general/external-references.md","tags":[],"version":"current","lastUpdatedBy":"Kor Dwarshuis","lastUpdatedAt":1758721285000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Starterpack (via NPX)","permalink":"/spec-up-t-website/docs/developer-documentation/scripts/scripts-general/files-directories/starterpack"},"next":{"title":"Regex Inventory","permalink":"/spec-up-t-website/docs/developer-documentation/scripts/scripts-general/regex-info"}}');var t=r(74848),i=r(28453);const c={},l="External References",a={},d=[{value:"Syntax and Usage",id:"syntax-and-usage",level:2},{value:"External References (xref)",id:"external-references-xref",level:3},{value:"Transcluded References (tref)",id:"transcluded-references-tref",level:3},{value:"Reference Processing Flow",id:"reference-processing-flow",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Reference Validation",id:"reference-validation",level:3},{value:"HTML Structure",id:"html-structure",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Configuration Example",id:"configuration-example",level:2}];function o(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"external-references",children:"External References"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"This documentation was generated by Copilot's \u201cClaude Sonnet 4 (Preview)\u201d and has not yet been verified by a human."})}),"\n",(0,t.jsx)(n.p,{children:"This document explains how external references work in Spec-Up-T, covering both xref (external reference links) and tref (transcluded references)."}),"\n",(0,t.jsx)(n.h2,{id:"syntax-and-usage",children:"Syntax and Usage"}),"\n",(0,t.jsx)(n.h3,{id:"external-references-xref",children:"External References (xref)"}),"\n",(0,t.jsx)(n.p,{children:"The xref tag creates a hyperlink to a term defined in another specification:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"[[xref:external-spec,term]]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"As described in the [[xref:kmg-1,authentic-chained-data-container]] specification...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"transcluded-references-tref",children:"Transcluded References (tref)"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"tref"})," tag embeds a term and its definition from another specification directly into your document:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"[[tref:external-spec,term]]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"[[tref:kmg-1,authentic-chained-data-container]]\n"})}),"\n",(0,t.jsx)(n.p,{children:"How External References Work"}),"\n",(0,t.jsx)(n.p,{children:"External references are processed in three phases:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Collection Phase"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"During the build preparation:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"collect-external-references.js"})," scans all markdown files"]}),"\n",(0,t.jsx)(n.li,{children:"It extracts all external reference patterns"}),"\n",(0,t.jsxs)(n.li,{children:["Each reference is matched with external specifications defined in ",(0,t.jsx)(n.code,{children:"specs.json"})]}),"\n",(0,t.jsx)(n.li,{children:"\u201cexternal specifications\u201d are Spec-Up-T specifications (external repositories) elsewhere on GitHub"}),"\n",(0,t.jsx)(n.li,{children:"The system fetches terms and definitions from external repositories"}),"\n",(0,t.jsxs)(n.li,{children:["The collected data is saved to ",(0,t.jsx)(n.code,{children:"xtrefs-data.js"})," and ",(0,t.jsx)(n.code,{children:"xtrefs-data.json"})]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Build Phase"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"When generating HTML:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"index.js"})," processes the markdown containing reference tags"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"xref"})," tags are transformed into anchor elements with class ",(0,t.jsx)(n.code,{children:"x-term-reference"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tref"})," tags are transformed into ",(0,t.jsx)(n.code,{children:"dt"})," elements with class ",(0,t.jsx)(n.code,{children:"transcluded-xref-term"})]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"allXTrefs"})," data object is embedded in a script tag in the output HTML"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Client-side Phase"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In the browser:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"insert-trefs.js"})," runs when the DOM is loaded"]}),"\n",(0,t.jsxs)(n.li,{children:["It finds all elements with the ",(0,t.jsx)(n.code,{children:"transcluded-xref-term"})," class"]}),"\n",(0,t.jsxs)(n.li,{children:["For each term, it looks up the definition in the ",(0,t.jsx)(n.code,{children:"allXTrefs"})," object"]}),"\n",(0,t.jsx)(n.li,{children:"It inserts the term definition and metadata about its source"}),"\n",(0,t.jsxs)(n.li,{children:["Special handling ensures proper ",(0,t.jsx)(n.code,{children:"dl/dt/dd"})," structure in the HTML"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"reference-processing-flow",children:"Reference Processing Flow"}),"\n",(0,t.jsx)(n.mermaid,{value:'graph TD\n    %% Collection Phase\n    subgraph "1: Collection Phase"\n        A[collect-external-references.js] --\x3e B[Scan Markdown Files]\n        B --\x3e C[Extract External Reference Patterns]\n        C --\x3e D[Match with external_specs in specs.json]\n        D --\x3e E[Fetch terms from external repositories]\n        E --\x3e F[Generate xtrefs-data.js and xtrefs-data.json]\n    end\n    \n    %% Build Phase\n    subgraph "2: Build Phase"\n        G[index.js processes markdown] --\x3e H{Tag Type}\n        H --\x3e|tref| I[Transform to dt with transcluded-xref-term class]\n        H --\x3e|xref| J[Transform to anchor with x-term-reference class]\n        I --\x3e K[Include placeholder in HTML output]\n        J --\x3e L[Include link in HTML output]\n        K --\x3e M[Embed allXTrefs data in script tag]\n        L --\x3e M\n    end\n    \n    %% Client-side Phase\n    subgraph "3: Client-side Phase"\n        N[insert-trefs.js runs on DOM load] --\x3e O[Find transcluded-xref-term elements]\n        O --\x3e P[Look up terms in allXTrefs object]\n        P --\x3e Q{Term Found?}\n        Q --\x3e|Yes| R[Insert term definition]\n        Q --\x3e|No| S[Insert \'Not Found\' message]\n        R --\x3e T[Create metadata dd element]\n        S --\x3e T\n        T --\x3e U[Handle proper dl/dt/dd structure]\n    end\n    \n    %% Inter-phase connections\n    F --\x3e|Used during build| G\n    M --\x3e|Loaded by browser| N\n    \n    %% Special case handling\n    V[Special markdown-it extensions] --\x3e|Enhance| G\n    W[references.js validates refs] --\x3e|Check| G'}),"\n",(0,t.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,t.jsx)(n.p,{children:"Data Structure"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"allXTrefs"})," object contains structured data about external references:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const allXTrefs = {\n  "xtrefs": [\n    {\n      "externalSpec": "toip1",\n      "term": "SSI",\n      "repoUrl": "https://github.com/example/repo",\n      "terms_dir": "spec/terms-definitions",\n      "owner": "example-owner",\n      "repo": "example-repo",\n      "site": null,\n      "commitHash": "1a2b3c4d5e6f",\n      "content": "[[def: SSI, self-sovereign identity]]\\n\\nA term for an identity system..."\n    },\n    // More terms...\n  ]\n};\n'})}),"\n",(0,t.jsx)(n.h3,{id:"reference-validation",children:"Reference Validation"}),"\n",(0,t.jsx)(n.p,{children:"The system validates references during build:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Unresolved references (terms referenced but not defined) are logged"}),"\n",(0,t.jsx)(n.li,{children:"Dangling definitions (terms defined but not referenced) are logged"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"html-structure",children:"HTML Structure"}),"\n",(0,t.jsx)(n.p,{children:"For transcluded terms, the system generates:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A definition term (",(0,t.jsx)(n.code,{children:"dt"}),") with the original term text"]}),"\n",(0,t.jsxs)(n.li,{children:["A definition description (",(0,t.jsx)(n.code,{children:"dd"}),") with the full content"]}),"\n",(0,t.jsx)(n.li,{children:"A metadata section showing repository, owner, and commit information"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure External Specs are Configured: All referenced repositories must be defined in specs.json"}),"\n",(0,t.jsx)(n.li,{children:"Use Consistent Term Names: Match the exact term name as defined in the source repository"}),"\n",(0,t.jsx)(n.li,{children:"Check Build Logs: Review for any unresolved references or errors"}),"\n",(0,t.jsx)(n.li,{children:"Consider Versioning: External references point to specific commits to ensure stability"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-example",children:"Configuration Example"}),"\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"specs.json"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "specs": [\n    {\n      "title": "My Specification",\n      "external_specs": [\n        {\n          "external_spec": "kmg-1",\n          "path": "https://github.com/org/repo",\n          "terms_dir": "spec/terms-definitions",\n          "gh_page": "https://org.github.io/repo"\n        }\n      ]\n    }\n  ]\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);
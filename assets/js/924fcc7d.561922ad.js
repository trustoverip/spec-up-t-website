"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6075],{28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(96540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}},84436:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"developer-documentation/scripts/scripts-build/markdown-it-comprehensive-documentation","title":"Markdown-it Implementation in Spec-Up-T: Comprehensive Technical Documentation","description":"This documentation was generated by Copilot\'s \u201cClaude Sonnet 4 (Preview)\u201d and has not yet been verified by a human.","source":"@site/docs/developer-documentation/scripts/scripts-build/markdown-it-comprehensive-documentation.md","sourceDirName":"developer-documentation/scripts/scripts-build","slug":"/developer-documentation/scripts/scripts-build/markdown-it-comprehensive-documentation","permalink":"/spec-up-t-website/docs/developer-documentation/scripts/scripts-build/markdown-it-comprehensive-documentation","draft":false,"unlisted":false,"editUrl":"https://github.com/blockchainbird/spec-up-t-website/tree/main/docs/developer-documentation/scripts/scripts-build/markdown-it-comprehensive-documentation.md","tags":[],"version":"current","lastUpdatedBy":"Kor Dwarshuis","lastUpdatedAt":1758014594000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Backslash Escape Mechanism","permalink":"/spec-up-t-website/docs/developer-documentation/scripts/scripts-build/escape-mechanism"},"next":{"title":"TREF vs XREF","permalink":"/spec-up-t-website/docs/developer-documentation/difference-xref-tref"}}');var r=i(74848),t=i(28453);const l={},c="Markdown-it Implementation in Spec-Up-T: Comprehensive Technical Documentation",a={},o=[{value:"Executive Summary",id:"executive-summary",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"System Design Principles",id:"system-design-principles",level:3},{value:"Technology Stack",id:"technology-stack",level:3},{value:"Core Processing Pipeline",id:"core-processing-pipeline",level:2},{value:"Processing Phases",id:"processing-phases",level:3},{value:"Implementation Components",id:"implementation-components",level:2},{value:"1. Main Processing Engine (<code>/index.js</code>)",id:"1-main-processing-engine-indexjs",level:3},{value:"Key Responsibilities",id:"key-responsibilities",level:4},{value:"Critical Functions",id:"critical-functions",level:4},{value:"2. Custom Extensions (<code>/src/markdown-it-extensions.js</code>)",id:"2-custom-extensions-srcmarkdown-it-extensionsjs",level:3},{value:"Template System Implementation",id:"template-system-implementation",level:4},{value:"Bootstrap Table Enhancement",id:"bootstrap-table-enhancement",level:4},{value:"Advanced Definition List Processing",id:"advanced-definition-list-processing",level:4},{value:"Link Enhancement",id:"link-enhancement",level:4},{value:"3. Client-Side Configuration (<code>/assets/js/declare-markdown-it.js</code>)",id:"3-client-side-configuration-assetsjsdeclare-markdown-itjs",level:3},{value:"Custom Extensions System",id:"custom-extensions-system",level:2},{value:"Template Architecture",id:"template-architecture",level:3},{value:"Pre-processing Replacers",id:"pre-processing-replacers",level:4},{value:"Token-based Templates",id:"token-based-templates",level:4},{value:"Supported Template Types",id:"supported-template-types",level:3},{value:"Template System",id:"template-system",level:2},{value:"Escape Mechanism",id:"escape-mechanism",level:3},{value:"Template Processing Flow",id:"template-processing-flow",level:3},{value:"Plugin Configuration",id:"plugin-configuration",level:2},{value:"Third-Party Plugin Integration",id:"third-party-plugin-integration",level:3},{value:"Notice Container System",id:"notice-container-system",level:3},{value:"Client-Side Integration",id:"client-side-integration",level:2},{value:"Asset Loading Order",id:"asset-loading-order",level:3},{value:"External Reference Processing",id:"external-reference-processing",level:3},{value:"Performance and Optimization",id:"performance-and-optimization",level:2},{value:"Token Processing Efficiency",id:"token-processing-efficiency",level:3},{value:"Memory Management",id:"memory-management",level:3},{value:"Error Handling and Validation",id:"error-handling-and-validation",level:2},{value:"Template Validation",id:"template-validation",level:3},{value:"Definition List Repair",id:"definition-list-repair",level:3},{value:"Development Guidelines",id:"development-guidelines",level:2},{value:"Adding New Template Types",id:"adding-new-template-types",level:3},{value:"Modifying Definition List Behavior",id:"modifying-definition-list-behavior",level:3},{value:"Best Practices",id:"best-practices",level:3},{value:"Troubleshooting and Debugging",id:"troubleshooting-and-debugging",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debugging Techniques",id:"debugging-techniques",level:3},{value:"Validation Tools",id:"validation-tools",level:3},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"markdown-it-implementation-in-spec-up-t-comprehensive-technical-documentation",children:"Markdown-it Implementation in Spec-Up-T: Comprehensive Technical Documentation"})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"This documentation was generated by Copilot's \u201cClaude Sonnet 4 (Preview)\u201d and has not yet been verified by a human."})}),"\n",(0,r.jsx)(n.h2,{id:"executive-summary",children:"Executive Summary"}),"\n",(0,r.jsx)(n.p,{children:"This document provides a comprehensive technical reference for the markdown-it implementation in Spec-Up-T, a specialized static site generator for technical specifications. The implementation extends the standard markdown-it parser (v13.0.1) with sophisticated custom plugins, template systems, and processing pipelines designed specifically for technical documentation authoring."}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#architecture-overview",children:"Architecture Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#core-processing-pipeline",children:"Core Processing Pipeline"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#implementation-components",children:"Implementation Components"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#custom-extensions-system",children:"Custom Extensions System"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#template-system",children:"Template System"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#plugin-configuration",children:"Plugin Configuration"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#client-side-integration",children:"Client-Side Integration"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#performance-and-optimization",children:"Performance and Optimization"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#error-handling-and-validation",children:"Error Handling and Validation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#development-guidelines",children:"Development Guidelines"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#troubleshooting-and-debugging",children:"Troubleshooting and Debugging"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,r.jsx)(n.h3,{id:"system-design-principles",children:"System Design Principles"}),"\n",(0,r.jsx)(n.p,{children:"The Spec-Up-T markdown-it implementation follows a modular, extensible architecture designed around these core principles:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token-Based Processing"}),": All transformations operate on markdown-it's token model"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Two-Phase Template Processing"}),": Pre-processing replacers + token-based templates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Definition List Specialization"}),": Advanced handling for technical terminology"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bootstrap Integration"}),": Automatic responsive styling for tables and UI elements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Escape Mechanism"}),": Sophisticated system for literal template display"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"External Reference Integration"}),": Support for cross-specification term references"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"technology-stack",children:"Technology Stack"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Core Parser"}),": markdown-it v13.0.1 with CommonMark compliance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Runtime Environment"}),": Node.js (server-side) and modern browsers (client-side)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Custom Extensions"}),": Native JavaScript plugins following markdown-it patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Third-Party Plugins"}),": 15+ curated ecosystem plugins for enhanced functionality"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"core-processing-pipeline",children:"Core Processing Pipeline"}),"\n",(0,r.jsx)(n.p,{children:"The markdown-to-HTML transformation follows a sophisticated multi-stage pipeline:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Markdown      \u2502    \u2502   Escape         \u2502    \u2502   Custom        \u2502\n\u2502   Input Files   \u2502\u2500\u2500\u2500\u25b6\u2502   Handling       \u2502\u2500\u2500\u2500\u25b6\u2502   Replacers     \u2502\n\u2502                 \u2502    \u2502   (Phase 1)      \u2502    \u2502   (Phase 2)     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                         \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510             \u25bc\n\u2502   HTML Output   \u2502    \u2502   Post-          \u2502    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Generation    \u2502\u25c0\u2500\u2500\u2500\u2502   Processing     \u2502\u25c0\u2500\u2500\u2500\u2502   markdown-it   \u2502\n\u2502                 \u2502    \u2502   (Phase 5)      \u2502    \u2502   Parsing       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502   (Phase 3)     \u2502\n                                \u2502               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                \u25bc                        \u2502\n                       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510               \u25bc\n                       \u2502   Definition    \u2502    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                       \u2502   List Fix &    \u2502\u25c0\u2500\u2500\u2500\u2502   Token-Based   \u2502\n                       \u2502   Term Sorting  \u2502    \u2502   Processing    \u2502\n                       \u2502   (Phase 4)     \u2502    \u2502   (Phase 3.5)   \u2502\n                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.h3,{id:"processing-phases",children:"Processing Phases"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pre-processing Phase"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Escape sequence conversion (",(0,r.jsx)(n.code,{children:"\\[[tag]]"})," \u2192 placeholders)"]}),"\n",(0,r.jsx)(n.li,{children:"File insertion and custom replacer application"}),"\n",(0,r.jsxs)(n.li,{children:["Critical for ",(0,r.jsx)(n.code,{children:"[[insert:file]]"})," and ",(0,r.jsx)(n.code,{children:"[[tref:spec,term]]"})," processing"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parsing Phase"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"markdown-it tokenization with full CommonMark compliance"}),"\n",(0,r.jsx)(n.li,{children:"Syntax validation and error detection"}),"\n",(0,r.jsx)(n.li,{children:"Token tree construction"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Plugin Processing Phase"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Custom template parsing via inline ruler"}),"\n",(0,r.jsx)(n.li,{children:"Bootstrap table enhancement"}),"\n",(0,r.jsx)(n.li,{children:"Definition list structure analysis"}),"\n",(0,r.jsx)(n.li,{children:"Path attribute extraction for links"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Rendering Phase"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Token-to-HTML conversion"}),"\n",(0,r.jsx)(n.li,{children:"Template token rendering"}),"\n",(0,r.jsx)(n.li,{children:"Bootstrap responsive wrapper injection"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Post-processing Phase"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Definition list structure repair (",(0,r.jsx)(n.code,{children:"fixDefinitionListStructure"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Alphabetical term sorting (",(0,r.jsx)(n.code,{children:"sortDefinitionTermsInHtml"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Escape sequence restoration (",(0,r.jsx)(n.code,{children:"restoreEscapedTags"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"implementation-components",children:"Implementation Components"}),"\n",(0,r.jsxs)(n.h3,{id:"1-main-processing-engine-indexjs",children:["1. Main Processing Engine (",(0,r.jsx)(n.code,{children:"/index.js"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"The primary markdown-it instance configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const md = require('markdown-it')({\n  html: true,        // Allow raw HTML in markdown\n  linkify: true,     // Auto-convert URLs to links\n  typographer: true  // Smart quotes and typography\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"key-responsibilities",children:"Key Responsibilities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Plugin Integration"}),": Configures 15+ specialized plugins"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Template Processing"}),": Dual-phase custom replacer system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Terminology Handling"}),": Advanced definition list processing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"External References"}),": Cross-specification term integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Asset Management"}),": Coordination with Gulp build system"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"critical-functions",children:"Critical Functions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"applyReplacers(doc)"}),": Pre-processes custom ",(0,r.jsx)(n.code,{children:"[[tag:args]]"})," syntax"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fixDefinitionListStructure(html)"}),": Repairs broken definition lists"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sortDefinitionTermsInHtml(html)"}),": Alphabetical term organization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"processEscapedTags(doc)"})," / ",(0,r.jsx)(n.code,{children:"restoreEscapedTags(html)"}),": Escape mechanism"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"2-custom-extensions-srcmarkdown-it-extensionsjs",children:["2. Custom Extensions (",(0,r.jsx)(n.code,{children:"/src/markdown-it-extensions.js"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"File Purpose"}),": Provides specialized markdown-it plugins for technical specification authoring."]}),"\n",(0,r.jsx)(n.h4,{id:"template-system-implementation",children:"Template System Implementation"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Core Constants"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const levels = 2;                         // Number of bracket chars: [[\nconst openString = '['.repeat(levels);   // Opening delimiter: [[\nconst closeString = ']'.repeat(levels);  // Closing delimiter: ]]\nconst contentRegex = /\\s*([^\\s\\[\\]:]+):?\\s*([^\\]\\n]+)?/i; // Template parsing\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Template Processing Rule"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"md.inline.ruler.after('emphasis', 'templates', function templates_ruler(state, silent) {\n  // Processes [[tag:args]] syntax during inline parsing\n  // Creates template tokens for custom rendering\n  // Handles escape placeholders to prevent processing\n});\n"})}),"\n",(0,r.jsx)(n.h4,{id:"bootstrap-table-enhancement",children:"Bootstrap Table Enhancement"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Automatic Table Processing"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"md.renderer.rules.table_open = function (tokens, idx, options, env, self) {\n  // Adds Bootstrap classes: table table-striped table-bordered table-hover\n  // Wraps tables in responsive container: table-responsive-md\n  // Preserves existing classes while adding new ones\n};\n"})}),"\n",(0,r.jsx)(n.h4,{id:"advanced-definition-list-processing",children:"Advanced Definition List Processing"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Functions"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"findTargetIndex(tokens, targetHtml)"}),": Locates terminology section marker"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"markEmptyDtElements(tokens, startIdx)"}),": Identifies broken definition terms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"addLastDdClass(tokens, ddIndex)"}),": Adds styling for last descriptions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"containsSpecReferences(tokens, startIdx)"}),": Distinguishes spec refs from terms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"isTermTranscluded(tokens, dtOpenIndex)"}),": Identifies external terms"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Critical Logic"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"md.renderer.rules.dl_open = function (tokens, idx, options, env, self) {\n  // Only adds 'terms-and-definitions-list' class if:\n  // 1. Comes after 'terminology-section-start' marker\n  // 2. Doesn't already have a class (avoids overriding reference-list)\n  // 3. Doesn't contain spec references (id=\"ref:...\")\n  // 4. Class hasn't been added yet (prevents multiple applications)\n};\n"})}),"\n",(0,r.jsx)(n.h4,{id:"link-enhancement",children:"Link Enhancement"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Path Attribute Extraction"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"md.renderer.rules.link_open = function (tokens, idx, options, env, renderer) {\n  // Extracts domains and path segments from URLs\n  // Adds path-0, path-1, etc. attributes for CSS targeting\n  // Special handling for auto-detected links (linkify)\n};\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"3-client-side-configuration-assetsjsdeclare-markdown-itjs",children:["3. Client-Side Configuration (",(0,r.jsx)(n.code,{children:"/assets/js/declare-markdown-it.js"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Simplified markdown-it instance for browser-based processing."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const md = window.markdownit({\n   html: true,        // Allow raw HTML preservation\n   linkify: true,     // Auto-convert URLs to clickable links\n   typographer: true  // Smart quotes and typography\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use Cases"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["External term definition rendering (",(0,r.jsx)(n.code,{children:"assets/js/insert-trefs.js"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Real-time markdown processing for GitHub issues"}),"\n",(0,r.jsx)(n.li,{children:"Client-side content augmentation"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"custom-extensions-system",children:"Custom Extensions System"}),"\n",(0,r.jsx)(n.h3,{id:"template-architecture",children:"Template Architecture"}),"\n",(0,r.jsx)(n.p,{children:"The template system operates on a two-phase approach:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pre-processing Replacers"})," (",(0,r.jsx)(n.code,{children:"applyReplacers"})," in ",(0,r.jsx)(n.code,{children:"/index.js"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token-based Templates"})," (",(0,r.jsx)(n.code,{children:"markdown-it-extensions.js"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"pre-processing-replacers",children:"Pre-processing Replacers"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"File Insertion"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"{\n  test: 'insert',\n  transform: function (originalMatch, type, path) {\n    return fs.readFileSync(path, 'utf8');\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Transcluded Terms"})," (Critical for definition list integrity):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  test: \'tref\',\n  transform: function (originalMatch, type, spec, term, alias) {\n    // Generates HTML dt elements directly to prevent list breaking\n    // Supports optional alias: [[tref:spec,term,alias]]\n    const termId = `term:${term.replace(/\\s+/g, \'-\').toLowerCase()}`;\n    const aliasId = alias ? `term:${alias.replace(/\\s+/g, \'-\').toLowerCase()}` : \'\';\n    \n    if (alias && alias !== term) {\n      return `<dt class="transcluded-xref-term"><span class="transcluded-xref-term" id="${termId}"><span id="${aliasId}">${term}</span></span></dt>`;\n    } else {\n      return `<dt class="transcluded-xref-term"><span class="transcluded-xref-term" id="${termId}">${term}</span></dt>`;\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"token-based-templates",children:"Token-based Templates"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Terminology Templates"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"{\n  filter: type => type.match(/^def$|^ref$|^xref|^tref$/i),\n  parse(token, type, primary) {\n    if (type === 'def') {\n      // Creates definition anchors: <span id=\"term:example\">...</span>\n    }\n    else if (type === 'ref') {\n      // Creates local references: <a href=\"#term:example\">...</a>\n    }\n    else if (type === 'xref') {\n      // Creates external references with proper URLs\n    }\n    else if (type === 'tref') {\n      // Creates transcluded term spans (inline processing)\n    }\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Specification References"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  filter: type => type.match(/^spec$|^spec-*\\w+$/i),\n  parse(token, type, name) {\n    // Looks up spec in corpus and caches for rendering\n  },\n  render(token, type, name) {\n    // Generates [<a href="#ref:SPEC-NAME">SPEC-NAME</a>] format\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"supported-template-types",children:"Supported Template Types"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Template"}),(0,r.jsx)(n.th,{children:"Syntax"}),(0,r.jsx)(n.th,{children:"Purpose"}),(0,r.jsx)(n.th,{children:"Output Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"def"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[[def:term1,term2]]"})}),(0,r.jsx)(n.td,{children:"Define terminology"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'<span id="term:term1">term1</span>'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"ref"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[[ref:term]]"})}),(0,r.jsx)(n.td,{children:"Reference local term"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'<a href="#term:term">term</a>'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"xref"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[[xref:spec,term]]"})}),(0,r.jsx)(n.td,{children:"Reference external term"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'<a href="https://spec.example.com#term:term">term</a>'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"tref"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[[tref:spec,term,alias]]"})}),(0,r.jsx)(n.td,{children:"Transclude external term"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'<dt class="transcluded-xref-term">...</dt>'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"spec"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[[spec:name]]"})}),(0,r.jsx)(n.td,{children:"Specification reference"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'[<a href="#ref:NAME">NAME</a>]'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"insert"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[[insert:file.txt]]"})}),(0,r.jsx)(n.td,{children:"File inclusion"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"(file contents)"})})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"template-system",children:"Template System"}),"\n",(0,r.jsx)(n.h3,{id:"escape-mechanism",children:"Escape Mechanism"}),"\n",(0,r.jsx)(n.p,{children:"The escape system handles literal display of template syntax using a three-phase approach:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pre-processing"}),": ",(0,r.jsx)(n.code,{children:"\\[[tag]]"})," \u2192 unique placeholder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Processing"}),": Normal template processing (placeholders ignored)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Post-processing"}),": Placeholders \u2192 literal ",(0,r.jsx)(n.code,{children:"[[tag]]"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Implementation"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Phase 1: processEscapedTags\ndoc = doc.replace(/\\\\(\\[\\[.*?\\]\\])/g, ESCAPED_PLACEHOLDER + '$1');\n\n// Phase 2: applyReplacers (placeholders are ignored)\ndoc = applyReplacers(doc);\n\n// Phase 3: restoreEscapedTags\nhtml = html.replace(new RegExp(ESCAPED_PLACEHOLDER + '(\\\\[\\\\[.*?\\\\]\\\\])', 'g'), '$1');\n"})}),"\n",(0,r.jsx)(n.h3,{id:"template-processing-flow",children:"Template Processing Flow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"Markdown Input\n      \u2193\n[[tag:args]] Detection\n      \u2193\nFilter Matching\n      \u2193\nParse Function (optional)\n      \u2193\nToken Creation\n      \u2193\nRender Function\n      \u2193\nHTML Output\n"})}),"\n",(0,r.jsx)(n.h2,{id:"plugin-configuration",children:"Plugin Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"third-party-plugin-integration",children:"Third-Party Plugin Integration"}),"\n",(0,r.jsx)(n.p,{children:"The system integrates 15+ specialized plugins:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:".use(require('markdown-it-attrs'))           // HTML attribute syntax {.class #id}\n.use(require('markdown-it-chart').default)   // Chart.js integration\n.use(require('markdown-it-deflist'))         // Definition list support\n.use(require('markdown-it-references'))      // Citation management\n.use(require('markdown-it-icons').default, 'font-awesome') // Icon rendering\n.use(require('markdown-it-ins'))             // Inserted text ++text++\n.use(require('markdown-it-mark'))            // Marked text ==text==\n.use(require('markdown-it-textual-uml'))     // UML diagram support\n.use(require('markdown-it-sub'))             // Subscript ~text~\n.use(require('markdown-it-sup'))             // Superscript ^text^\n.use(require('markdown-it-task-lists'))      // Task list checkboxes\n.use(require('markdown-it-multimd-table'), { // Enhanced table support\n  multiline: true,\n  rowspan: true,\n  headerless: true\n})\n.use(require('markdown-it-container'), 'notice', { // Notice blocks\n  validate: function (params) {\n    return params.match(/(\\w+)\\s?(.*)?/) && noticeTypes[matches[1]];\n  }\n})\n.use(require('markdown-it-prism'))           // Syntax highlighting\n.use(require('markdown-it-toc-and-anchor').default, { // TOC generation\n  tocClassName: 'toc',\n  tocFirstLevel: 2,\n  tocLastLevel: 4,\n  anchorLinkSymbol: '#',\n  anchorClassName: 'toc-anchor d-print-none'\n})\n.use(require('@traptitech/markdown-it-katex')) // Mathematical notation\n"})}),"\n",(0,r.jsx)(n.h3,{id:"notice-container-system",children:"Notice Container System"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const noticeTypes = {\n  note: 1,\n  issue: 1,\n  example: 1,\n  warning: 1,\n  todo: 1\n};\n\n// Usage: ::: warning This is a warning :::\n// Output: <div class="notice warning">...</div>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"client-side-integration",children:"Client-Side Integration"}),"\n",(0,r.jsx)(n.h3,{id:"asset-loading-order",children:"Asset Loading Order"}),"\n",(0,r.jsxs)(n.p,{children:["From ",(0,r.jsx)(n.code,{children:"/config/asset-map.json"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "body": {\n    "js": [\n      "node_modules/markdown-it/dist/markdown-it.min.js",\n      "node_modules/markdown-it-deflist/dist/markdown-it-deflist.min.js",\n      "assets/js/declare-markdown-it.js",\n      "..."\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"external-reference-processing",children:"External Reference Processing"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Client-side markdown-it usage"})," (",(0,r.jsx)(n.code,{children:"/assets/js/insert-trefs.js"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Parse external term definitions\nconst tempDiv = document.createElement('div');\ntempDiv.innerHTML = md.render(content);\n// Process and insert into DOM\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"GitHub Issues Integration"})," (",(0,r.jsx)(n.code,{children:"/assets/js/index.js"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Render GitHub issue content\nrepo_issue_list.innerHTML = issues.map(issue => {\n  return `<section>${md.render(issue.body || '')}</section>`;\n}).join('');\n"})}),"\n",(0,r.jsx)(n.h2,{id:"performance-and-optimization",children:"Performance and Optimization"}),"\n",(0,r.jsx)(n.h3,{id:"token-processing-efficiency",children:"Token Processing Efficiency"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Helper Function Extraction"}),": Complex logic extracted to reduce cognitive complexity:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"findTargetIndex()"}),": O(n) token stream search"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"markEmptyDtElements()"}),": Single-pass empty element detection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"processLastDdElements()"}),": Efficient dd element processing"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Caching Strategy"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["External reference data cached in ",(0,r.jsx)(n.code,{children:".cache/"})," directory"]}),"\n",(0,r.jsxs)(n.li,{children:["Compiled assets stored in ",(0,r.jsx)(n.code,{children:"/assets/compiled/"})]}),"\n",(0,r.jsxs)(n.li,{children:["Spec corpus pre-loaded from ",(0,r.jsx)(n.code,{children:"/assets/compiled/refs.json"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Batch DOM Operations"}),": Client-side processing collects changes before applying",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Efficient Regex"}),": Optimized patterns for template detection",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Minimal Token Traversal"}),": Strategic token processing to avoid deep recursion"]}),"\n",(0,r.jsx)(n.h2,{id:"error-handling-and-validation",children:"Error Handling and Validation"}),"\n",(0,r.jsx)(n.h3,{id:"template-validation",children:"Template Validation"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Unknown Template Handling"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"let template = templates.find(t => t.filter(type) && t);\nif (!template) return false; // Preserves original content\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Missing Reference Handling"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"if (!primary) return; // Gracefully handles empty template args\n"})}),"\n",(0,r.jsx)(n.h3,{id:"definition-list-repair",children:"Definition List Repair"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Broken Structure Detection"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function fixDefinitionListStructure(html) {\n  // Identifies and merges separated definition lists\n  // Removes empty paragraphs that break list continuity\n  // Ensures all terms appear in continuous definition list\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"development-guidelines",children:"Development Guidelines"}),"\n",(0,r.jsx)(n.h3,{id:"adding-new-template-types",children:"Adding New Template Types"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Choose Processing Phase"}),": Decide between pre-processing replacer or token-based template"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Implement Handler"}),": Add to appropriate array in ",(0,r.jsx)(n.code,{children:"/index.js"})," or ",(0,r.jsx)(n.code,{children:"/src/markdown-it-extensions.js"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test Escape Mechanism"}),": Verify ",(0,r.jsx)(n.code,{children:"\\[[tag]]"})," produces literal output"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add Documentation"}),": Update template type table and examples"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"modifying-definition-list-behavior",children:"Modifying Definition List Behavior"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update Helper Functions"}),": Modify functions in ",(0,r.jsx)(n.code,{children:"/src/markdown-it-extensions.js"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test Edge Cases"}),": Verify empty elements, transcluded terms, spec references"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Check Cognitive Complexity"}),": Keep functions below 15 (SonarQube requirement)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validate Structure"}),": Ensure valid HTML output with proper nesting"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Template Design"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep syntax intuitive and consistent"}),"\n",(0,r.jsx)(n.li,{children:"Support both required and optional arguments"}),"\n",(0,r.jsx)(n.li,{children:"Provide clear error messages for invalid syntax"}),"\n",(0,r.jsxs)(n.li,{children:["Test with escape mechanism: ",(0,r.jsx)(n.code,{children:"\\[[tag]]"})," \u2192 ",(0,r.jsx)(n.code,{children:"[[tag]]"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Performance"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Minimize regex operations in hot paths"}),"\n",(0,r.jsx)(n.li,{children:"Cache expensive computations (external references)"}),"\n",(0,r.jsx)(n.li,{children:"Use efficient array/object operations"}),"\n",(0,r.jsx)(n.li,{children:"Avoid deep token tree traversal"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code Quality"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Extract complex logic into helper functions"}),"\n",(0,r.jsx)(n.li,{children:"Add comprehensive comments explaining algorithms"}),"\n",(0,r.jsx)(n.li,{children:"Keep cognitive complexity below 15"}),"\n",(0,r.jsx)(n.li,{children:"Follow SonarQube code quality guidelines"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting-and-debugging",children:"Troubleshooting and Debugging"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition List Problems"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Symptom"}),": Terms appear in separate lists"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cause"}),": Transcluded terms (",(0,r.jsx)(n.code,{children:"[[tref:...]]"}),") breaking list structure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Solution"}),": Use pre-processing replacer to generate HTML dt elements"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Template Not Processing"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Symptom"}),": ",(0,r.jsx)(n.code,{children:"[[tag:args]]"})," appears literally in output"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cause"}),": No matching template handler found"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Solution"}),": Check filter regex and template registration"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Empty Definition Terms"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Symptom"}),": Broken HTML with empty ",(0,r.jsx)(n.code,{children:"<dt></dt>"})," elements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Solution"}),": ",(0,r.jsx)(n.code,{children:"markEmptyDtElements()"})," marks them for skipping"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"debugging-techniques",children:"Debugging Techniques"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Token Stream Analysis"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"console.log('Tokens:', tokens.map(t => ({ type: t.type, content: t.content })));\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Template Processing"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Add to template handler\nconsole.log('Processing template:', type, args);\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition List Structure"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Check token sequence around definition lists\nfor (let i = startIdx; i < tokens.length && tokens[i].type !== 'dl_close'; i++) {\n  console.log(i, tokens[i].type, tokens[i].content);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"validation-tools",children:"Validation Tools"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Reference Validation"}),": ",(0,r.jsx)(n.code,{children:"validateReferences()"})," in ",(0,r.jsx)(n.code,{children:"/src/references.js"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Template Syntax"}),": Custom regex validation in processing pipeline",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"HTML Structure"}),": Definition list repair functions ensure valid output"]}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"The Spec-Up-T markdown-it implementation represents a sophisticated extension of the standard markdown-it parser, specifically designed for technical specification authoring. Its key innovations include:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dual-Phase Template Processing"}),": Pre-processing replacers + token-based templates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Advanced Definition List Handling"}),": Specialized processing for technical terminology"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bootstrap Integration"}),": Automatic responsive styling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"External Reference System"}),": Cross-specification term integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Robust Error Handling"}),": Graceful degradation and structure repair"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The system successfully balances complexity with maintainability, providing powerful authoring capabilities while adhering to code quality standards (SonarQube compliance, cognitive complexity < 15)."}),"\n",(0,r.jsx)(n.p,{children:"This implementation serves as a model for extending markdown-it in specialized domains, demonstrating how to integrate custom syntax, maintain performance, and ensure reliable output generation for complex technical documentation workflows."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Files"}),": This documentation is based on analysis of the following key files:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/index.js"})," - Main processing engine and plugin configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/src/markdown-it-extensions.js"})," - Custom extensions and template system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/assets/js/declare-markdown-it.js"})," - Client-side configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/config/asset-map.json"})," - Asset loading configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/package.json"})," - Dependencies and version information"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Why this file should stay"}),": This comprehensive documentation serves as the definitive reference for the markdown-it implementation in Spec-Up-T. It consolidates and corrects information from multiple sources, providing accurate technical details verified against the actual codebase. This file is essential for:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Developers"})," modifying or extending the markdown-it functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Contributors"})," understanding the complex template and processing systems"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Maintainers"})," troubleshooting issues and ensuring code quality compliance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"})," as the authoritative source for markdown-it architecture decisions"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The file follows the repository's coding instructions by explaining why it should stay and how to use it for understanding and maintaining the markdown-it implementation."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);